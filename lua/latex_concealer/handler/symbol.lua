local util = require("latex_concealer.util")
return {
	--Greek
	["\\alpha"] = { "Œ±", "MathGreek" },
	["\\beta"] = { "Œ≤", "MathGreek" },
	["\\gamma"] = { "Œ≥", "MathGreek" },
	["\\delta"] = { "Œ¥", "MathGreek" },
	["\\epsilon"] = { "œµ", "MathGreek" },
	["\\varepsilon"] = { "Œµ", "MathGreek" },
	["\\zeta"] = { "Œ∂", "MathGreek" },
	["\\eta"] = { "Œ∑", "MathGreek" },
	["\\theta"] = { "Œ∏", "MathGreek" },
	["\\vartheta"] = { "œë", "MathGreek" },
	["\\iota"] = { "Œπ", "MathGreek" },
	["\\kappa"] = { "Œ∫", "MathGreek" },
	["\\lambda"] = { "Œª", "MathGreek" },
	["\\mu"] = { "Œº", "MathGreek" },
	["\\nu"] = { "ŒΩ", "MathGreek" },
	["\\xi"] = { "Œæ", "MathGreek" },
	["\\pi"] = { "œÄ", "MathGreek" },
	["\\varpi"] = { "œñ", "MathGreek" },
	["\\rho"] = { "œÅ", "MathGreek" },
	["\\varrho"] = { "œ±", "MathGreek" },
	["\\sigma"] = { "œÉ", "MathGreek" },
	["\\varsigma"] = { "œÇ", "MathGreek" },
	["\\tau"] = { "œÑ", "MathGreek" },
	["\\upsilon"] = { "œÖ", "MathGreek" },
	["\\phi"] = { "œï", "MathGreek" },
	["\\varphi"] = { "œÜ", "MathGreek" },
	["\\chi"] = { "œá", "MathGreek" },
	["\\psi"] = { "œà", "MathGreek" },
	["\\omega"] = { "œâ", "MathGreek" },
	["\\Gamma"] = { "Œì", "MathGreek" },
	["\\Delta"] = { "Œî", "MathGreek" },
	["\\Theta"] = { "Œò", "MathGreek" },
	["\\Lambda"] = { "Œõ", "MathGreek" },
	["\\Xi"] = { "Œû", "MathGreek" },
	["\\Pi"] = { "Œ†", "MathGreek" },
	["\\Sigma"] = { "Œ£", "MathGreek" },
	["\\Upsilon"] = { "Œ•", "MathGreek" },
	["\\Phi"] = { "Œ¶", "MathGreek" },
	["\\Chi"] = { "Œß", "MathGreek" },
	["\\Psi"] = { "Œ®", "MathGreek" },
	["\\Omega"] = { "Œ©", "MathGreek" },
	--Special
	["\\exists"] = { "‚àÉ", "Special" },
	["\\forall"] = { "‚àÄ", "Special" },
	["\\mapsto"] = { "‚Ü¶", "Special" },
	["\\models"] = { "‚ïû", "Special" },
	["\\S"] = { "¬ß", "Special" },
	["\\vdots"] = { "‚ãÆ", "Special" },
	["\\angle"] = { "‚à†", "Special" },
	["\\cdots"] = { "‚ãØ", "Special" },
	["\\ddots"] = { "‚ã±", "Special" },
	["\\dots"] = { "‚Ä¶", "Special" },
	["\\ldots"] = { "‚Ä¶", "Special" },
	["\\natural"] = { "‚ôÆ", "Special" },
	["\\flat"] = { "‚ô≠", "Special" },
	["\\sharp"] = { "‚ôØ", "Special" },
	["\\clubsuit"] = { "‚ô£", "Special" },
	["\\diamondsuit"] = { "‚ô¢", "Special" },
	["\\heartsuit"] = { "‚ô°", "Special" },
	["\\spadesuit"] = { "‚ô†", "Special" },
	["\\imath"] = { "…©", "Special" },
	["\\jmath"] = { "ùö•", "Special" },
	["\\emptyset"] = { "‚àÖ", "Special" },
	["\\varnothing"] = { "‚àÖ", "Special" },
	["\\hbar"] = { "‚Ñè", "Special" },
	["\\ell"] = { "‚Ñì", "Special" },
	["\\infty"] = { "‚àû", "Special" },
	["\\aleph"] = { "‚Ñµ", "Special" },
	["\\wp"] = { "‚Ñò", "Special" },
	["\\wr"] = { "‚âÄ", "Special" },
	["\\\\"] = { "ÓØ™", "Special" },
	["\\{"] = { "{", "Special" },
	["\\}"] = { "}", "Special" },
	--Operator
	["\\sin"] = { "sin", "Constant" },
	["\\cos"] = { "cos", "Constant" },
	["\\tan"] = { "tan", "Constant" },
	["\\cot"] = { "cot", "Constant" },
	["\\arcsin"] = { "arcsin", "Constant" },
	--Fraction
	["\\frac"] = function(buffer, node)
		local command_name = node:field("command")[1]
		local arg1_node, arg2_node = unpack(node:field("arg"))
		if arg1_node and arg2_node then
			local row1, col1 = command_name:range()
			local row1_end, col1_end, row2, col2 = arg1_node:range()
			local row2_end, col2_end, row3, col3 = arg2_node:range()
			util.multichar_conceal(
				buffer,
				row1,
				col1,
				row1_end,
				col1_end + 1,
				{ "(", "Special" },
				vim.api.nvim_create_namespace("latex_concealer")
			)
			util.multichar_conceal(
				buffer,
				row2,
				col2 - 1,
				row2_end,
				col2_end + 1,
				{ ")/(", "Special" },
				vim.api.nvim_create_namespace("latex_concealer")
			)
			util.multichar_conceal(
				buffer,
				row3,
				col3 - 1,
				row3,
				col3,
				{ ")", "Special" },
				vim.api.nvim_create_namespace("latex_concealer")
			)
		end
		return nil
	end,
}
